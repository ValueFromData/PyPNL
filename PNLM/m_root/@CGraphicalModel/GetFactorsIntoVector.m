%% This file were automatically generated by SWIG's MatLab module
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                                                                         %%
%%                INTEL CORPORATION PROPRIETARY INFORMATION                %%
%%   This software is supplied under the terms of a license agreement or   %%
%%  nondisclosure agreement with Intel Corporation and may not be copied   %%
%%   or disclosed except in accordance with the terms of that agreement.   %%
%%       Copyright (c) 2003 Intel Corporation. All Rights Reserved.        %%
%%                                                                         %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% [result, OUTPUTOut2] = GetFactorsIntoVector(varargin)
%%
%% C++ prototype: int GetFactors(pnl::CGraphicalModel const *self,pnl::intVector const &subdomainIn,pnl::pFactorVector *OUTPUT)
%%

function [result, OUTPUTOut2] = GetFactorsIntoVector(varargin)

[result, OUTPUTOut2] = feval('pnl_full', 'CGraphicalModel_GetFactorsIntoVector_wrap', varargin{:});
for k = 1:length(OUTPUTOut2)
    OUTPUTOut2{k} = CFactor('%%@#DefaultCtor', OUTPUTOut2{k});
end

return
