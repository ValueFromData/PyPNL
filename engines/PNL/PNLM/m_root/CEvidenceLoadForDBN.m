%% This file were automatically generated by SWIG's MatLab module
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%                                                                         %%
%%                INTEL CORPORATION PROPRIETARY INFORMATION                %%
%%   This software is supplied under the terms of a license agreement or   %%
%%  nondisclosure agreement with Intel Corporation and may not be copied   %%
%%   or disclosed except in accordance with the terms of that agreement.   %%
%%       Copyright (c) 2003 Intel Corporation. All Rights Reserved.        %%
%%                                                                         %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% [result, OUTPUTOut2] = LoadForDBN(varargin)
%%
%% C++ prototype: bool pnl::CEvidence::Load(char const *fname,pnl::pEvidencesVecVector *OUTPUT,pnl::CModelDomain const *pMD)
%%

function [result, OUTPUTOut2] = LoadForDBN(varargin)

[result, OUTPUTOut2] = feval('pnl_full', 'CEvidence_LoadForDBN_wrap', varargin{:});
for i = 1:length(OUTPUTOut2)
    tmp = OUTPUTOut2{i};
    for j = 1:length(tmp)
        tmp{j} = CEvidence('%%@#DefaultCtor', tmp{j});
        end
    OUTPUTOut2{i} = tmp;
    end
clear tmp;
return
